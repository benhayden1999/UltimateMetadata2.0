type Direction = "N" | "S" | "E" | "W";
type CoordinateFormat = "DMS" | "DM" | "D";
interface Coordinate {
    degrees: number;
    minutes: number | undefined;
    seconds: number | undefined;
    direction: Direction | undefined;
    format: CoordinateFormat;
    remainder: string | undefined;
}
/**
 * Parses a string containing both latitude and longitude coordinates.
 * @param input - String containing both coordinates
 * @returns Object containing latitude and longitude in decimal degrees, or undefined if parsing fails
 * @throws CoordinateParseError if the input format is invalid
 */
export declare function parseCoordinates(input: string): {
    latitude: number;
    longitude: number;
};
/**
 * Parses a coordinate string in decimal degrees format.
 * @param input - String containing a single coordinate
 * @returns Object containing degrees and direction, or undefined if parsing fails
 * @throws CoordinateParseError if the format is not decimal degrees or direction is missing
 */
export declare function parseDecimalCoordinate(input: string): {
    degrees: number;
    direction: Direction;
} | undefined;
/**
 * Parses a single coordinate string into its components.
 * @param input - String containing a single coordinate
 * @returns Parsed coordinate object
 * @throws CoordinateParseError if the format is invalid
 */
export declare function parseCoordinate(input: string): Coordinate;
export {};
